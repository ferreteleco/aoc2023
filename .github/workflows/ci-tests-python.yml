name: ci-tests-python

env:
  ##############################################################################
  # Please fill in:
  # Ref. https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/variables
  ##############################################################################
  # Target python version intended to use to run tests into. Defaults to 3.10.2
  ##############################################################################
  TARGET_PYTHON_VERSION:  3.10.13
  ##############################################################################
  ##############################################################################
  # Target folder where tests reside. Defaults to "tests"
  ##############################################################################
  TESTS_DIRECTORY: tests
  ##############################################################################
  SRC_DIR: aoc2023

# BRANCH-AND-TRIGGERS #
on:
  pull_request:
    branches:
      - master

  ##############################################################################
  # Relevant where using it as a reusable workflow
  ##############################################################################
  workflow_call:

jobs:
  run_unit_tests:

    name: Unit Tests
    runs-on: ubuntu-latest

    ############################################################################
    # Minimum permissions required by EnricoMi/publish-unit-test-result-action@v2
    # Ref. https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
    ############################################################################
    permissions:
          contents: read
          issues: read
          checks: write
          pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup (composite)
        id: tests-setup
        uses: ./.github/actions/ci-setup-python
        with:
          python_version: ${{ env.TARGET_PYTHON_VERSION }}

      - name: Run tests
        id: tests-run
        working-directory: .
        run: |
          poetry run python -m pytest ${{ env.TESTS_DIRECTORY }} --doctest-modules --junit-xml=reports/junit/junit-test-report.xml --html=reports/junit/html-test-report.html --cov=aoc2023 --cov-report=html --cov-report=xml --cov-report=lcov

      - name: Unit Test Results
        id: tests-publish
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: reports/junit/junit-test-report.xml
          action_fail: true
          action_fail_on_inconclusive: true

      - name: Generate Badges (Tests)
        id: badge-gen-tests
        if: success()
        working-directory: .
        run: |
          poetry run genbadge tests -i reports/junit/junit-test-report.xml -o reports/badges/junit-tests-badge.svg

      - name: Generate Badges (flake8)
        id: badge-gen-flake8
        if: always()
        working-directory: .
        run: |
          poetry run flake8 ${{ env.SRC_DIR }} --exit-zero --format=html --htmldir ./reports/flake8 --statistics --tee --output-file reports/flake8/flake8stats.txt
          poetry run genbadge flake8 -i reports/flake8/flake8stats.txt -o reports/badges/flake8-badge.svg

      - name: Generate Badges (Coverage)
        id: badge-gen-coverage
        if: success()
        working-directory: .
        run: |
          poetry run genbadge coverage -i reports/coverage/cov.xml -o reports/badges/cov-badge.svg
